#!/bin/bash

#
# ================================================================================
# Multi-AI File Paster Chrome Extension | Production Release v1.1.0
# ================================================================================
#
# MODULE: .github/hooks/pre-commit
# FUNCTION: Pre-commit hook to protect critical files and validate project integrity
# ARCHITECTURE: Git Hook System with File Protection and Version Management
#
# DEVELOPMENT TEAM:
# ‚Ä¢ Lead Developer: Joseph Matino <dev@josephmatino.com> | https://josephmatino.com
# ‚Ä¢ Scrum Master: Majok Deng <scrum@majokdeng.com> | https://majokdeng.com
#
# ORGANIZATION: WekTurbo Designs - Hostwek LTD | https://hostwek.com/wekturbo
# REPOSITORY: https://github.com/JosephMatino/MultiAiFilePaster
# TECHNICAL SUPPORT: wekturbo@hostwek.com
#
# PLATFORM INTEGRATIONS: Git hooks, file validation, version management
# CORE DEPENDENCIES: Git, Bash, File System Protection
#
# Copyright (c) 2025 WekTurbo Designs - Hostwek LTD. All rights reserved.
# Licensed under MIT License | https://opensource.org/licenses/MIT
# ================================================================================
#

echo "üîç Pre-commit validation starting..."

CRITICAL_FILES=(
    "manifest.json"
    "src/shared/config.js"
    "src/background/index.js"
    "src/popup/index.js"
    "src/popup/index.html"
    "src/popup/styles.css"
    "src/content/index.js"
    "src/content/components/fileattach.js"
    "src/content/components/loader.js"
    "src/content/components/modal.js"
    "src/content/components/toast.js"
    "src/content/platforms/chatgpt.js"
    "src/content/platforms/claude.js"
    "src/content/platforms/deepseek.js"
    "src/content/platforms/factory.js"
    "src/content/platforms/gemini.js"
    "src/content/platforms/grok.js"
    "src/shared/languagedetector.js"
    "src/shared/metrics.js"
    "readme.md"
    "changelog.md"
    "LICENSE"
    "logo/mfp_16.png"
    "logo/mfp_32.png"
    "logo/mfp_48.png"
    "logo/mfp_128.png"
)

echo "üõ°Ô∏è Checking critical files..."
for file in "${CRITICAL_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå CRITICAL FILE MISSING: $file"
        echo "üö® Commit blocked to prevent critical file loss!"
        echo "üí° Restore the file before committing."
        exit 1
    fi
done

echo "üîÑ Checking version consistency..."
MANIFEST_VERSION=$(grep '"version"' manifest.json | sed 's/.*"version": "\([^"]*\)".*/\1/')
CONFIG_VERSION=$(grep 'EXTENSION_VERSION' src/shared/config.js | sed "s/.*'\([^']*\)'.*/\1/")

if [ "$MANIFEST_VERSION" != "$CONFIG_VERSION" ]; then
    echo "‚ùå VERSION MISMATCH:"
    echo "   manifest.json: $MANIFEST_VERSION"
    echo "   config.js: $CONFIG_VERSION"
    echo "üö® Commit blocked - fix version inconsistency!"
    exit 1
fi

echo "üîç Checking file integrity..."
if [ ! -s "src/shared/config.js" ] || [ $(wc -c < "src/shared/config.js") -lt 1000 ]; then
    echo "‚ùå config.js appears corrupted (empty or too small)"
    echo "üö® Commit blocked - restore config.js!"
    exit 1
fi


CHANGED_FILES=$(git diff --cached --name-only | wc -l)
if [ "$CHANGED_FILES" -gt 20 ]; then
    echo "‚ö†Ô∏è  WARNING: Large commit ($CHANGED_FILES files changed)"
    echo "üí° Consider breaking into smaller commits"
    read -p "Continue anyway? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "üö´ Commit cancelled by user"
        exit 1
    fi
fi


echo "üîÑ Checking for version signature updates..."
if git diff --cached --name-only | grep -q "manifest.json\|src/shared/config.js"; then
    echo "üìù Version files changed - updating signatures across codebase..."

    # Update all file headers with new version
    find src/ -name "*.js" -exec sed -i "s/Production Release v[0-9]\+\.[0-9]\+\.[0-9]\+/Production Release v$MANIFEST_VERSION/g" {} \;
    find .github/ \( -name "*.yml" -o -name "*.md" \) -exec sed -i "s/Production Release v[0-9]\+\.[0-9]\+\.[0-9]\+/Production Release v$MANIFEST_VERSION/g" {} \; 2>/dev/null || true

    # Stage updated signature files
    git add src/ .github/ 2>/dev/null || true

    echo "‚úÖ Version signatures updated to v$MANIFEST_VERSION"
fi

echo "‚úÖ Pre-commit validation passed!"
echo "üì¶ Proceeding with commit..."
